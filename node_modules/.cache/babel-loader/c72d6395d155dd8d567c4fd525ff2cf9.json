{"ast":null,"code":"import { default as accessor, accessorFields } from './accessor';\nimport array from './array';\nimport isFunction from './isFunction';\nimport splitAccessPath from './splitAccessPath';\nimport stringValue from './stringValue';\nexport default function (fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function (f, i) {\n    if (f == null) {\n      return null;\n    } else {\n      idx.push(i);\n      return isFunction(f) ? f : splitAccessPath(f).map(stringValue).join('][');\n    }\n  }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i,\n      j,\n      f,\n      u,\n      v,\n      d,\n      t,\n      lt,\n      gt;\n  if (n < 0) return null;\n\n  for (j = 0; j <= n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n\n    if (isFunction(f)) {\n      d = 'f' + i;\n      u = '(u=this.' + d + '(a))';\n      v = '(v=this.' + d + '(b))';\n      (t = t || {})[d] = f;\n    } else {\n      u = '(u=a[' + f + '])';\n      v = '(v=b[' + f + '])';\n    }\n\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n\n    if (ord[i] !== 'descending') {\n      gt = 1;\n      lt = -1;\n    } else {\n      gt = -1;\n      lt = 1;\n    }\n\n    code += '(' + u + '<' + v + '||u==null)&&v!=null?' + lt + ':(u>v||v==null)&&u!=null?' + gt + ':' + d + '!==u&&v===v?' + lt + ':v!==v&&u===u?' + gt + (i < n ? ':' : ':0');\n  }\n\n  f = Function('a', 'b', code + ';');\n  if (t) f = f.bind(t);\n  fields = fields.reduce(function (map, field) {\n    if (isFunction(field)) {\n      (accessorFields(field) || []).forEach(function (_) {\n        map[_] = 1;\n      });\n    } else if (field != null) {\n      map[field + ''] = 1;\n    }\n\n    return map;\n  }, {});\n  return accessor(f, Object.keys(fields));\n}","map":null,"metadata":{},"sourceType":"module"}