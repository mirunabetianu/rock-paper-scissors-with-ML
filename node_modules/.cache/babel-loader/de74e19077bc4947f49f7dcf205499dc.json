{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nvar _classCallCheck = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar preact_1 = require(\"preact\");\n\nvar glamor_1 = require(\"glamor\");\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\n\n\nvar SurfaceComponent =\n/*#__PURE__*/\nfunction (_preact_1$Component) {\n  _inherits(SurfaceComponent, _preact_1$Component);\n\n  function SurfaceComponent() {\n    _classCallCheck(this, SurfaceComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SurfaceComponent).apply(this, arguments));\n  }\n\n  _createClass(SurfaceComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          tab = _this$props.tab;\n      this.props.registerSurface(name, tab, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // Prevent re-rendering of this component as it\n      // is primarily controlled outside of this class\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          visible = _this$props2.visible,\n          styles = _this$props2.styles;\n      var finalStyles = Object.assign({}, SurfaceComponent.defaultStyles, styles);\n      var width = finalStyles.width,\n          height = finalStyles.height;\n      var maxHeight = finalStyles.maxHeight,\n          maxWidth = finalStyles.maxWidth;\n      maxHeight = height === SurfaceComponent.defaultStyles.height ? maxHeight : height;\n      maxWidth = width === SurfaceComponent.defaultStyles.width ? maxWidth : width;\n      var surfaceStyle = glamor_1.css({\n        display: visible ? 'block' : 'none',\n        backgroundColor: 'white',\n        marginTop: '10px',\n        marginBottom: '10px',\n        boxShadow: '0 0 6px -3px #777',\n        padding: '10px !important',\n        height: height,\n        width: width,\n        maxHeight: maxHeight,\n        maxWidth: maxWidth,\n        overflow: 'auto'\n      });\n      var labelStyle = glamor_1.css({\n        backgroundColor: 'white',\n        boxSizing: 'border-box',\n        borderBottom: '1px solid #357EDD',\n        lineHeight: '2em',\n        marginBottom: '20px',\n        fontWeight: '600',\n        textAlign: 'center'\n      });\n      var drawAreaStyle = glamor_1.css({\n        boxSizing: 'border-box'\n      });\n      return preact_1.h(\"div\", {\n        className: \"\".concat(surfaceStyle, \" tf-surface\"),\n        ref: function ref(r) {\n          return _this.container = r;\n        },\n        \"data-visible\": visible\n      }, preact_1.h(\"div\", {\n        className: \"\".concat(labelStyle, \" tf-label\"),\n        ref: function ref(r) {\n          return _this.label = r;\n        }\n      }, name), preact_1.h(\"div\", {\n        className: \"\".concat(drawAreaStyle, \" tf-draw-area\"),\n        ref: function ref(r) {\n          return _this.drawArea = r;\n        }\n      }));\n    }\n  }]);\n\n  return SurfaceComponent;\n}(preact_1.Component);\n\nSurfaceComponent.defaultStyles = {\n  maxWidth: '550px',\n  maxHeight: '580px',\n  height: 'auto',\n  width: 'auto'\n};\nexports.SurfaceComponent = SurfaceComponent;","map":null,"metadata":{},"sourceType":"script"}