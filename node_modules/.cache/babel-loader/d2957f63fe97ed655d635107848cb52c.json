{"ast":null,"code":"import _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nvar AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport var AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport var AxisComponent =\n/*#__PURE__*/\nfunction (_Split) {\n  _inherits(AxisComponent, _Split);\n\n  function AxisComponent() {\n    var _this;\n\n    var explicit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var implicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var mainExtracted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, AxisComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AxisComponent).call(this));\n    _this.explicit = explicit;\n    _this.implicit = implicit;\n    _this.mainExtracted = mainExtracted;\n    return _this;\n  }\n\n  _createClass(AxisComponent, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n  }, {\n    key: \"hasAxisPart\",\n    value: function hasAxisPart(part) {\n      // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n      if (part === 'axis') {\n        // always has the axis container part\n        return true;\n      }\n\n      if (part === 'grid' || part === 'title') {\n        return !!this.get(part);\n      } // Other parts are enabled by default, so they should not be false or null.\n\n\n      return !isFalseOrNull(this.get(part));\n    }\n  }]);\n\n  return AxisComponent;\n}(Split);","map":null,"metadata":{},"sourceType":"module"}