{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nvar _classCallCheck = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar preact_1 = require(\"preact\");\n\nvar glamor_1 = require(\"glamor\");\n/**\n * Renders a container for tab links\n */\n\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_preact_1$Component) {\n  _inherits(Tabs, _preact_1$Component);\n\n  function Tabs() {\n    _classCallCheck(this, Tabs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tabs).apply(this, arguments));\n  }\n\n  _createClass(Tabs, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tabNames = _this$props.tabNames,\n          activeTab = _this$props.activeTab,\n          handleClick = _this$props.handleClick;\n      var tabs = tabNames.length > 0 ? tabNames.map(function (name) {\n        return preact_1.h(Tab, {\n          key: name,\n          id: name,\n          handleClick: handleClick,\n          isActive: name === activeTab\n        }, name);\n      }) : null;\n      var tabStyle = glamor_1.css({\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n        whiteSpace: 'nowrap',\n        borderBottomStyle: 'solid',\n        borderBottomWidth: '1px',\n        borderColor: '#eee',\n        paddingBottom: '1rem',\n        marginTop: '1rem'\n      });\n      return preact_1.h(\"div\", {\n        className: \"\".concat(tabStyle, \" visor-tabs\")\n      }, tabs);\n    }\n  }]);\n\n  return Tabs;\n}(preact_1.Component);\n\nexports.Tabs = Tabs;\n/**\n * A link representing a tab. Note that the component does not contain the\n * tab content\n */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_preact_1$Component2) {\n  _inherits(Tab, _preact_1$Component2);\n\n  function Tab() {\n    _classCallCheck(this, Tab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tab).apply(this, arguments));\n  }\n\n  _createClass(Tab, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          isActive = _this$props2.isActive,\n          handleClick = _this$props2.handleClick,\n          id = _this$props2.id;\n      var tabStyle = glamor_1.css({\n        borderBottomColor: isActive ? '#357EDD' : '#AAAAAA',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        cursor: 'pointer',\n        ':hover': {\n          color: '#357EDD'\n        },\n        display: 'inline-block',\n        marginRight: '1rem',\n        padding: '.5rem',\n        fontSize: '1rem',\n        fontWeight: 'bold'\n      });\n      return preact_1.h(\"a\", {\n        className: \"\".concat(tabStyle, \" tf-tab\"),\n        \"data-isactive\": isActive,\n        onClick: function onClick() {\n          return handleClick(id);\n        }\n      }, children);\n    }\n  }]);\n\n  return Tab;\n}(preact_1.Component);","map":null,"metadata":{},"sourceType":"script"}