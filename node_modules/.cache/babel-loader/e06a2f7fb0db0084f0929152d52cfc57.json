{"ast":null,"code":"import { normalizeLogicalOperand } from './logical';\nimport { normalizePredicate } from './predicate';\nexport function isFilter(t) {\n  return t['filter'] !== undefined;\n}\nexport function isImputeSequence(t) {\n  var _a;\n\n  return ((_a = t) === null || _a === void 0 ? void 0 : _a['stop']) !== undefined;\n}\nexport function isLookup(t) {\n  return t['lookup'] !== undefined;\n}\nexport function isLookupData(from) {\n  return from['data'] !== undefined;\n}\nexport function isLookupSelection(from) {\n  return from['selection'] !== undefined;\n}\nexport function isPivot(t) {\n  return t['pivot'] !== undefined;\n}\nexport function isDensity(t) {\n  return t['density'] !== undefined;\n}\nexport function isQuantile(t) {\n  return t['quantile'] !== undefined;\n}\nexport function isRegression(t) {\n  return t['regression'] !== undefined;\n}\nexport function isLoess(t) {\n  return t['loess'] !== undefined;\n}\nexport function isSample(t) {\n  return t['sample'] !== undefined;\n}\nexport function isWindow(t) {\n  return t['window'] !== undefined;\n}\nexport function isJoinAggregate(t) {\n  return t['joinaggregate'] !== undefined;\n}\nexport function isFlatten(t) {\n  return t['flatten'] !== undefined;\n}\nexport function isCalculate(t) {\n  return t['calculate'] !== undefined;\n}\nexport function isBin(t) {\n  return !!t['bin'];\n}\nexport function isImpute(t) {\n  return t['impute'] !== undefined;\n}\nexport function isTimeUnit(t) {\n  return t['timeUnit'] !== undefined;\n}\nexport function isAggregate(t) {\n  return t['aggregate'] !== undefined;\n}\nexport function isStack(t) {\n  return t['stack'] !== undefined;\n}\nexport function isFold(t) {\n  return t['fold'] !== undefined;\n}\nexport function normalizeTransform(transform) {\n  return transform.map(function (t) {\n    if (isFilter(t)) {\n      return {\n        filter: normalizeLogicalOperand(t.filter, normalizePredicate)\n      };\n    }\n\n    return t;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}