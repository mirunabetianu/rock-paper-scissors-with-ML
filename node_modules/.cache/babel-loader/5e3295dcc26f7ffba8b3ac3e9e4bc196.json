{"ast":null,"code":"import _slicedToArray from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { points } from './points';\nimport rSquared from './r-squared';\nexport default function (data, x, y) {\n  var _points = points(data, x, y),\n      _points2 = _slicedToArray(_points, 4),\n      xv = _points2[0],\n      yv = _points2[1],\n      ux = _points2[2],\n      uy = _points2[3],\n      n = xv.length;\n\n  var X2 = 0,\n      X3 = 0,\n      X4 = 0,\n      XY = 0,\n      X2Y = 0,\n      i,\n      dx,\n      dy,\n      x2;\n\n  for (i = 0; i < n;) {\n    dx = xv[i];\n    dy = yv[i++];\n    x2 = dx * dx;\n    X2 += (x2 - X2) / i;\n    X3 += (x2 * dx - X3) / i;\n    X4 += (x2 * x2 - X4) / i;\n    XY += (dx * dy - XY) / i;\n    X2Y += (x2 * dy - X2Y) / i;\n  }\n\n  var X2X2 = X4 - X2 * X2,\n      d = X2 * X2X2 - X3 * X3,\n      a = (X2Y * X2 - XY * X3) / d,\n      b = (XY * X2X2 - X2Y * X3) / d,\n      c = -a * X2,\n      predict = function predict(x) {\n    x = x - ux;\n    return a * x * x + b * x + c + uy;\n  }; // transform coefficients back from mean-centered space\n\n\n  return {\n    coef: [c - b * ux + a * ux * ux + uy, b - 2 * a * ux, a],\n    predict: predict,\n    rSquared: rSquared(data, x, y, 0, predict)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}