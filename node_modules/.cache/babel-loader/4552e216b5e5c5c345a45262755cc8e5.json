{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nvar _regeneratorRuntime = require(\"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar types_1 = require(\"../types\");\n\nvar visor_1 = require(\"../visor\");\n\nfunction getDrawArea(drawable) {\n  if (drawable instanceof HTMLElement) {\n    return drawable;\n  } else if (types_1.isSurface(drawable)) {\n    return drawable.drawArea;\n  } else if (types_1.isSurfaceInfo(drawable)) {\n    var surface = visor_1.visor().surface({\n      name: drawable.name,\n      tab: drawable.tab,\n      styles: drawable.styles\n    });\n    return surface.drawArea;\n  } else {\n    throw new Error('Not a drawable');\n  }\n}\n\nexports.getDrawArea = getDrawArea;\n\nfunction shallowEquals( // tslint:disable-next-line:no-any\na, b) {\n  var aProps = Object.getOwnPropertyNames(a);\n  var bProps = Object.getOwnPropertyNames(b);\n\n  if (aProps.length !== bProps.length) {\n    return false;\n  }\n\n  for (var i = 0; i < aProps.length; i++) {\n    var prop = aProps[i];\n\n    if (a[prop] !== b[prop]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.shallowEquals = shallowEquals;\n\nfunction nextFrame() {\n  return __awaiter(this, void 0, void 0,\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (r) {\n              return requestAnimationFrame(r);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexports.nextFrame = nextFrame;","map":null,"metadata":{},"sourceType":"script"}