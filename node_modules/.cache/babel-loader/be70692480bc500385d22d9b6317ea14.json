{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar d3_format_1 = require(\"d3-format\");\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar glamor_1 = require(\"glamor\");\n\nvar render_utils_1 = require(\"./render_utils\");\n/**\n * Renders a table\n *\n * ```js\n * const headers = [\n *  'Col 1',\n *  'Col 2',\n *  'Col 3',\n * ];\n *\n * const values = [\n *  [1, 2, 3],\n *  ['4', '5', '6'],\n *  ['strong>7</strong>', true, false],\n * ];\n *\n * const surface = { name: 'Table', tab: 'Charts' };\n * tfvis.render.table(surface, { headers, values });\n * ```\n *\n * @param opts.fontSize fontSize in pixels for text in the chart.\n *\n */\n\n/** @doc {heading: 'Charts', namespace: 'render'} */\n\n\nfunction table(container, // tslint:disable-next-line:no-any\ndata) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (data && data.headers == null) {\n    throw new Error('Data to render must have a \"headers\" property');\n  }\n\n  if (data && data.values == null) {\n    throw new Error('Data to render must have a \"values\" property');\n  }\n\n  var drawArea = render_utils_1.getDrawArea(container);\n  var options = Object.assign({}, defaultOpts, opts);\n  var table = d3_selection_1.select(drawArea).select('table.tf-table');\n  var tableStyle = glamor_1.css({\n    fontSize: options.fontSize || '.875rem',\n    width: '100%',\n    maxWidth: '64rem',\n    marginRight: 'auto',\n    marginLeft: 'auto'\n  }); // If a table is not already present on this element add one\n\n  if (table.size() === 0) {\n    table = d3_selection_1.select(drawArea).append('table');\n    table.attr('class', \" \".concat(tableStyle, \" tf-table\"));\n    table.append('thead').append('tr');\n    table.append('tbody');\n  }\n\n  if (table.size() !== 1) {\n    throw new Error('Error inserting table');\n  } //\n  // Add the reader row\n  //\n\n\n  var headerRowStyle = glamor_1.css({\n    fontWeight: '600',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    borderColor: 'rgba( 0, 0, 0, .2 )',\n    textAlign: 'left',\n    paddingBottom: '1rem',\n    paddingRight: '1rem',\n    backgroundColor: '#fff'\n  });\n  var headers = table.select('thead').select('tr').selectAll('th').data(data.headers);\n  var headersEnter = headers.enter().append('th').attr('class', \"\".concat(headerRowStyle));\n  headers.merge(headersEnter).html(function (d) {\n    return d;\n  });\n  headers.exit().remove(); //\n  // Add the data rows\n  //\n\n  var format = d3_format_1.format(',.4~f');\n  var rows = table.select('tbody').selectAll('tr').data(data.values);\n  var rowsEnter = rows.enter().append('tr'); // Nested selection to add individual cells\n\n  var cellStyle = glamor_1.css({\n    padding: '0.25rem',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: '1px',\n    borderColor: 'rgba( 0, 0, 0, .2 )'\n  });\n  var cells = rows.merge(rowsEnter).selectAll('td').data(function (d) {\n    return d;\n  });\n  var cellsEnter = cells.enter().append('td').attr('class', \"\".concat(cellStyle));\n  cells.merge(cellsEnter).html(function (d) {\n    return typeof d === 'number' ? format(d) : d;\n  });\n  cells.exit().remove();\n  rows.exit().remove();\n}\n\nexports.table = table;\nvar defaultOpts = {\n  fontSize: 14\n};","map":null,"metadata":{},"sourceType":"script"}