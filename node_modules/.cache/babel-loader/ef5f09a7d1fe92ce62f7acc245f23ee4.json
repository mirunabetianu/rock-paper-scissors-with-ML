{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport initializeRenderer from './initialize-renderer';\nimport { renderModule } from 'vega-scenegraph';\nimport { error } from 'vega-util';\n/**\n * Render the current scene in a headless fashion.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A Promise that resolves to a renderer.\n */\n\nexport default function (_x, _x2, _x3, _x4) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(view, type, scaleFactor, opt) {\n    var module, ctr;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            module = renderModule(type), ctr = module && module.headless;\n            if (!ctr) error('Unrecognized renderer type: ' + type);\n            _context.next = 4;\n            return view.runAsync();\n\n          case 4:\n            return _context.abrupt(\"return\", initializeRenderer(view, null, null, ctr, scaleFactor, opt).renderAsync(view._scenegraph.root));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}