{"ast":null,"code":"import { stringValue } from 'vega-util';\nimport { TUPLE, unitName } from '.';\nimport { TUPLE_FIELDS } from './transforms/project';\nexport function singleOrMultiSignals(model, selCmpt) {\n  var name = selCmpt.name;\n  var fieldsSg = name + TUPLE_FIELDS;\n  var project = selCmpt.project;\n  var datum = '(item().isVoronoi ? datum.datum : datum)';\n  var values = project.items.map(function (p) {\n    var fieldDef = model.fieldDef(p.channel); // Binned fields should capture extents, for a range test against the raw field.\n\n    return fieldDef && fieldDef.bin ? \"[\".concat(datum, \"[\").concat(stringValue(model.vgField(p.channel, {})), \"], \") + \"\".concat(datum, \"[\").concat(stringValue(model.vgField(p.channel, {\n      binSuffix: 'end'\n    })), \"]]\") : \"\".concat(datum, \"[\").concat(stringValue(p.field), \"]\");\n  }).join(', '); // Only add a discrete selection to the store if a datum is present _and_\n  // the interaction isn't occurring on a group mark. This guards against\n  // polluting interactive state with invalid values in faceted displays\n  // as the group marks are also data-driven. We force the update to account\n  // for constant null states but varying toggles (e.g., shift-click in\n  // whitespace followed by a click in whitespace; the store should only\n  // be cleared on the second click).\n\n  var update = \"unit: \".concat(unitName(model), \", fields: \").concat(fieldsSg, \", values\");\n  var events = selCmpt.events;\n  return [{\n    name: name + TUPLE,\n    on: events ? [{\n      events: events,\n      update: \"datum && item().mark.marktype !== 'group' ? {\".concat(update, \": [\").concat(values, \"]} : null\"),\n      force: true\n    }] : []\n  }];\n}\nvar multi = {\n  signals: singleOrMultiSignals,\n  modifyExpr: function modifyExpr(model, selCmpt) {\n    var tpl = selCmpt.name + TUPLE;\n    return tpl + ', ' + (selCmpt.resolve === 'global' ? 'null' : \"{unit: \".concat(unitName(model), \"}\"));\n  }\n};\nexport default multi;","map":null,"metadata":{},"sourceType":"module"}