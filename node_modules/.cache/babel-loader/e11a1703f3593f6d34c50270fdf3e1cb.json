{"ast":null,"code":"import { identity } from './accessors';\nimport peek from './peek';\nimport toNumber from './toNumber';\n\nfunction exp(sign) {\n  return function (x) {\n    return sign * Math.exp(x);\n  };\n}\n\nfunction log(sign) {\n  return function (x) {\n    return Math.log(sign * x);\n  };\n}\n\nfunction symlog(c) {\n  return function (x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction symexp(c) {\n  return function (x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction pow(exponent) {\n  return function (x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction pan(domain, delta, lift, ground) {\n  var d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      dd = (d1 - d0) * delta;\n  return [ground(d0 - dd), ground(d1 - dd)];\n}\n\nexport function panLinear(domain, delta) {\n  return pan(domain, delta, toNumber, identity);\n}\nexport function panLog(domain, delta) {\n  var sign = Math.sign(domain[0]);\n  return pan(domain, delta, log(sign), exp(sign));\n}\nexport function panPow(domain, delta, exponent) {\n  return pan(domain, delta, pow(exponent), pow(1 / exponent));\n}\nexport function panSymlog(domain, delta, constant) {\n  return pan(domain, delta, symlog(constant), symexp(constant));\n}\n\nfunction zoom(domain, anchor, scale, lift, ground) {\n  var d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      da = anchor != null ? lift(anchor) : (d0 + d1) / 2;\n  return [ground(da + (d0 - da) * scale), ground(da + (d1 - da) * scale)];\n}\n\nexport function zoomLinear(domain, anchor, scale) {\n  return zoom(domain, anchor, scale, toNumber, identity);\n}\nexport function zoomLog(domain, anchor, scale) {\n  var sign = Math.sign(domain[0]);\n  return zoom(domain, anchor, scale, log(sign), exp(sign));\n}\nexport function zoomPow(domain, anchor, scale, exponent) {\n  return zoom(domain, anchor, scale, pow(exponent), pow(1 / exponent));\n}\nexport function zoomSymlog(domain, anchor, scale, constant) {\n  return zoom(domain, anchor, scale, symlog(constant), symexp(constant));\n}","map":null,"metadata":{},"sourceType":"module"}