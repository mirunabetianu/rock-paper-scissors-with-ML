{"ast":null,"code":"import _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { duplicate, hash as _hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for flatten transform nodes\n */\n\nexport var FlattenTransformNode =\n/*#__PURE__*/\nfunction (_DataFlowNode) {\n  _inherits(FlattenTransformNode, _DataFlowNode);\n\n  function FlattenTransformNode(parent, transform) {\n    var _this;\n\n    _classCallCheck(this, FlattenTransformNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlattenTransformNode).call(this, parent));\n    _this.transform = transform;\n    _this.transform = duplicate(transform); // duplicate to prevent side effects\n\n    var _this$transform = _this.transform,\n        flatten = _this$transform.flatten,\n        _this$transform$as = _this$transform.as,\n        as = _this$transform$as === void 0 ? [] : _this$transform$as;\n    _this.transform.as = flatten.map(function (f, i) {\n      var _a;\n\n      return _a = as[i], _a !== null && _a !== void 0 ? _a : f;\n    });\n    return _this;\n  }\n\n  _createClass(FlattenTransformNode, [{\n    key: \"clone\",\n    value: function clone() {\n      return new FlattenTransformNode(this.parent, duplicate(this.transform));\n    }\n  }, {\n    key: \"dependentFields\",\n    value: function dependentFields() {\n      return new Set(this.transform.flatten);\n    }\n  }, {\n    key: \"producedFields\",\n    value: function producedFields() {\n      return new Set(this.transform.as);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash() {\n      return \"FlattenTransform \".concat(_hash(this.transform));\n    }\n  }, {\n    key: \"assemble\",\n    value: function assemble() {\n      var _this$transform2 = this.transform,\n          fields = _this$transform2.flatten,\n          as = _this$transform2.as;\n      var result = {\n        type: 'flatten',\n        fields: fields,\n        as: as\n      };\n      return result;\n    }\n  }]);\n\n  return FlattenTransformNode;\n}(DataFlowNode);","map":null,"metadata":{},"sourceType":"module"}