{"ast":null,"code":"import { getSizeType, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { getFieldDef, isContinuous } from '../../channeldef';\nimport * as log from '../../log';\nimport { isStep } from '../../spec/base';\nexport function initLayoutSize(_ref) {\n  var encoding = _ref.encoding,\n      size = _ref.size;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = POSITION_SCALE_CHANNELS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var channel = _step.value;\n      var sizeType = getSizeType(channel);\n      var fieldDef = getFieldDef(encoding[channel]);\n\n      if (isStep(size[sizeType])) {\n        if (fieldDef) {\n          if (isContinuous(fieldDef)) {\n            delete size[sizeType];\n            log.warn(log.message.stepDropped(sizeType));\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return size;\n}","map":null,"metadata":{},"sourceType":"module"}