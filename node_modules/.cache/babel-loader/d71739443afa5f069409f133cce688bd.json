{"ast":null,"code":"import { isFieldDef, vgField } from '../../channeldef';\nimport { GEOJSON } from '../../type';\nimport * as encode from './encode';\nexport var geoshape = {\n  vgMark: 'shape',\n  encodeEntry: function encodeEntry(model) {\n    return Object.assign({}, encode.baseEncodeEntry(model, {\n      align: 'ignore',\n      baseline: 'ignore',\n      color: 'include',\n      size: 'ignore',\n      orient: 'ignore'\n    }));\n  },\n  postEncodingTransform: function postEncodingTransform(model) {\n    var encoding = model.encoding;\n    var shapeDef = encoding.shape;\n    var transform = Object.assign({\n      type: 'geoshape',\n      projection: model.projectionName()\n    }, shapeDef && isFieldDef(shapeDef) && shapeDef.type === GEOJSON ? {\n      field: vgField(shapeDef, {\n        expr: 'datum'\n      })\n    } : {});\n    return [transform];\n  }\n};","map":null,"metadata":{},"sourceType":"module"}