{"ast":null,"code":"import { isTimeFormatFieldDef } from '../../channeldef';\nimport { ScaleType } from '../../scale';\nimport { keys } from '../../util';\nimport { timeFormatExpression } from '../common';\nexport function labels(model, channel, specifiedLabelsSpec) {\n  var _a;\n\n  var fieldDef = (_a = model.fieldDef(channel), _a !== null && _a !== void 0 ? _a : channel === 'x' ? model.fieldDef('x2') : channel === 'y' ? model.fieldDef('y2') : undefined);\n  var axis = model.axis(channel);\n  var labelsSpec = {}; // We use a label encoding instead of setting the `format` property because Vega does not let us determine how the format should be interpreted.\n\n  if (isTimeFormatFieldDef(fieldDef)) {\n    var isUTCScale = model.getScaleComponent(channel).get('type') === ScaleType.UTC;\n    var expr = timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, null, isUTCScale);\n\n    if (expr) {\n      labelsSpec.text = {\n        signal: expr\n      };\n    }\n  }\n\n  labelsSpec = Object.assign(Object.assign({}, labelsSpec), specifiedLabelsSpec);\n  return keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n}","map":null,"metadata":{},"sourceType":"module"}