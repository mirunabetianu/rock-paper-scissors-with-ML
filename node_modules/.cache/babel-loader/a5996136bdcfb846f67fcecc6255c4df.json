{"ast":null,"code":"import estimateBandwidth from './bandwidth';\nimport gaussian from './normal';\nimport { random } from './random'; // TODO: support for additional kernels?\n\nexport default function (support, bandwidth) {\n  var kernel = gaussian(),\n      dist = {},\n      n = 0;\n\n  dist.data = function (_) {\n    if (arguments.length) {\n      support = _;\n      n = _ ? _.length : 0;\n      return dist.bandwidth(bandwidth);\n    } else {\n      return support;\n    }\n  };\n\n  dist.bandwidth = function (_) {\n    if (!arguments.length) return bandwidth;\n    bandwidth = _;\n    if (!bandwidth && support) bandwidth = estimateBandwidth(support);\n    return dist;\n  };\n\n  dist.sample = function () {\n    return support[~~(random() * n)] + bandwidth * kernel.sample();\n  };\n\n  dist.pdf = function (x) {\n    for (var y = 0, i = 0; i < n; ++i) {\n      y += kernel.pdf((x - support[i]) / bandwidth);\n    }\n\n    return y / bandwidth / n;\n  };\n\n  dist.cdf = function (x) {\n    for (var y = 0, i = 0; i < n; ++i) {\n      y += kernel.cdf((x - support[i]) / bandwidth);\n    }\n\n    return y / n;\n  };\n\n  dist.icdf = function () {\n    throw Error('KDE icdf not supported.');\n  };\n\n  return dist.data(support);\n}","map":null,"metadata":{},"sourceType":"module"}