{"ast":null,"code":"import _defineProperty from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _scales;\n\nimport { hasOwnProperty } from 'vega-util';\nimport invertRange from './scales/invertRange';\nimport invertRangeExtent from './scales/invertRangeExtent';\nimport { Identity, Linear, Log, Pow, Sqrt, Symlog, Time, UTC, Sequential, Diverging, Quantile, Quantize, Threshold, BinOrdinal, Ordinal, Band, Point } from './scales/types';\nimport { band as scaleBand, point as scalePoint } from './scales/scaleBand';\nimport { scaleBinOrdinal } from './scales/scaleBinOrdinal';\nimport * as $ from 'd3-scale';\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor) {\n  return function scale() {\n    var s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n}\n\nexport default function scale(type, scale) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale);\n    return this;\n  } else {\n    return hasOwnProperty(scales, type) ? scales[type] : undefined;\n  }\n}\nvar scales = (_scales = {}, _defineProperty(_scales, Identity, $.scaleIdentity), _defineProperty(_scales, Linear, $.scaleLinear), _defineProperty(_scales, Log, $.scaleLog), _defineProperty(_scales, Pow, $.scalePow), _defineProperty(_scales, Sqrt, $.scaleSqrt), _defineProperty(_scales, Symlog, $.scaleSymlog), _defineProperty(_scales, Time, $.scaleTime), _defineProperty(_scales, UTC, $.scaleUtc), _defineProperty(_scales, Sequential, $.scaleSequential), _defineProperty(_scales, Sequential + '-' + Linear, $.scaleSequential), _defineProperty(_scales, Sequential + '-' + Log, $.scaleSequentialLog), _defineProperty(_scales, Sequential + '-' + Pow, $.scaleSequentialPow), _defineProperty(_scales, Sequential + '-' + Sqrt, $.scaleSequentialSqrt), _defineProperty(_scales, Sequential + '-' + Symlog, $.scaleSequentialSymlog), _defineProperty(_scales, Diverging + '-' + Linear, $.scaleDiverging), _defineProperty(_scales, Diverging + '-' + Log, $.scaleDivergingLog), _defineProperty(_scales, Diverging + '-' + Pow, $.scaleDivergingPow), _defineProperty(_scales, Diverging + '-' + Sqrt, $.scaleDivergingSqrt), _defineProperty(_scales, Diverging + '-' + Symlog, $.scaleDivergingSymlog), _defineProperty(_scales, Quantile, $.scaleQuantile), _defineProperty(_scales, Quantize, $.scaleQuantize), _defineProperty(_scales, Threshold, $.scaleThreshold), _defineProperty(_scales, BinOrdinal, scaleBinOrdinal), _defineProperty(_scales, Ordinal, $.scaleOrdinal), _defineProperty(_scales, Band, scaleBand), _defineProperty(_scales, Point, scalePoint), _scales);\n\nfor (var key in scales) {\n  scale(key, scales[key]);\n}","map":null,"metadata":{},"sourceType":"module"}