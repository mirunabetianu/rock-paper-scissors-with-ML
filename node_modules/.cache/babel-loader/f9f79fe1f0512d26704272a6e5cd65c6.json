{"ast":null,"code":"import HierarchyLayout from './HierarchyLayout';\nimport { inherits } from 'vega-util';\nimport { pack } from 'd3-hierarchy';\nvar Output = ['x', 'y', 'r', 'depth', 'children'];\n/**\n * Packed circle tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\n\nexport default function Pack(params) {\n  HierarchyLayout.call(this, params);\n}\nPack.Definition = {\n  \"type\": \"Pack\",\n  \"metadata\": {\n    \"tree\": true,\n    \"modifies\": true\n  },\n  \"params\": [{\n    \"name\": \"field\",\n    \"type\": \"field\"\n  }, {\n    \"name\": \"sort\",\n    \"type\": \"compare\"\n  }, {\n    \"name\": \"padding\",\n    \"type\": \"number\",\n    \"default\": 0\n  }, {\n    \"name\": \"radius\",\n    \"type\": \"field\",\n    \"default\": null\n  }, {\n    \"name\": \"size\",\n    \"type\": \"number\",\n    \"array\": true,\n    \"length\": 2\n  }, {\n    \"name\": \"as\",\n    \"type\": \"string\",\n    \"array\": true,\n    \"length\": Output.length,\n    \"default\": Output\n  }]\n};\nvar prototype = inherits(Pack, HierarchyLayout);\nprototype.layout = pack;\nprototype.params = ['radius', 'size', 'padding'];\nprototype.fields = Output;","map":null,"metadata":{},"sourceType":"module"}