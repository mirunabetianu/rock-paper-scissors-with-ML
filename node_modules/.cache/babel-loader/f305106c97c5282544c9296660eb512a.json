{"ast":null,"code":"import { format, isTypedFieldDef, isValueDef } from '../../../channeldef';\nimport { formatSignalRef } from '../../common';\nimport { wrapCondition } from './conditional';\nexport function text(model) {\n  var channel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text';\n  var channelDef = model.encoding[channel];\n  return wrapCondition(model, channelDef, channel, function (cDef) {\n    return textRef(cDef, model.config);\n  });\n}\nexport function textRef(channelDef, config) {\n  var expr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'datum';\n\n  // text\n  if (channelDef) {\n    if (isValueDef(channelDef)) {\n      return {\n        value: channelDef.value\n      };\n    }\n\n    if (isTypedFieldDef(channelDef)) {\n      return formatSignalRef(channelDef, format(channelDef), expr, config);\n    }\n  }\n\n  return undefined;\n}","map":null,"metadata":{},"sourceType":"module"}