{"ast":null,"code":"// Dot density binning for dot plot construction.\n// Based on Leland Wilkinson, Dot Plots, The American Statistician, 1999.\n// https://www.cs.uic.edu/~wilkinson/Publications/dotplots.pdf\nexport default function (array, step, smooth, f) {\n  f = f || function (_) {\n    return _;\n  };\n\n  var i = 0,\n      j = 1,\n      n = array.length,\n      v = new Float64Array(n),\n      a = f(array[0]),\n      b = a,\n      w = a + step,\n      x;\n\n  for (; j < n; ++j) {\n    x = f(array[j]);\n\n    if (x >= w) {\n      b = (a + b) / 2;\n\n      for (; i < j; ++i) {\n        v[i] = b;\n      }\n\n      w = x + step;\n      a = x;\n    }\n\n    b = x;\n  }\n\n  b = (a + b) / 2;\n\n  for (; i < j; ++i) {\n    v[i] = b;\n  }\n\n  return smooth ? smoothing(v, step + step / 4) : v;\n} // perform smoothing to reduce variance\n// swap points between \"adjacent\" stacks\n// Wilkinson defines adjacent as within step/4 units\n\nfunction smoothing(v, thresh) {\n  var n = v.length,\n      a = 0,\n      b = 1,\n      c,\n      d; // get left stack\n\n  while (v[a] === v[b]) {\n    ++b;\n  }\n\n  while (b < n) {\n    // get right stack\n    c = b + 1;\n\n    while (v[b] === v[c]) {\n      ++c;\n    } // are stacks adjacent?\n    // if so, compare sizes and swap as needed\n\n\n    if (v[b] - v[b - 1] < thresh) {\n      d = b + (a + c - b - b >> 1);\n\n      while (d < b) {\n        v[d++] = v[b];\n      }\n\n      while (d > b) {\n        v[d--] = v[a];\n      }\n    } // update left stack indices\n\n\n    a = b;\n    b = c;\n  }\n\n  return v;\n}","map":null,"metadata":{},"sourceType":"module"}