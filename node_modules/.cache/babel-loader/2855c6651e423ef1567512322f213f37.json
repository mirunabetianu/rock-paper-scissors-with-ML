{"ast":null,"code":"import { toSet } from 'vega-util';\nimport { contains, keys } from './util';\nexport var AREA = 'area';\nexport var BAR = 'bar';\nexport var IMAGE = 'image';\nexport var LINE = 'line';\nexport var POINT = 'point';\nexport var RECT = 'rect';\nexport var RULE = 'rule';\nexport var TEXT = 'text';\nexport var TICK = 'tick';\nexport var TRAIL = 'trail';\nexport var CIRCLE = 'circle';\nexport var SQUARE = 'square';\nexport var GEOSHAPE = 'geoshape'; // Using mapped type to declare index, ensuring we always have all marks when we add more.\n\nvar MARK_INDEX = {\n  area: 1,\n  bar: 1,\n  image: 1,\n  line: 1,\n  point: 1,\n  text: 1,\n  tick: 1,\n  trail: 1,\n  rect: 1,\n  geoshape: 1,\n  rule: 1,\n  circle: 1,\n  square: 1\n};\nexport function isMark(m) {\n  return !!MARK_INDEX[m];\n}\nexport function isPathMark(m) {\n  return contains(['line', 'area', 'trail'], m);\n}\nexport function isRectBasedMark(m) {\n  return contains(['rect', 'bar', 'image'], m);\n}\nexport var PRIMITIVE_MARKS = keys(MARK_INDEX);\nexport function isMarkDef(mark) {\n  return mark['type'];\n}\nvar PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\nexport function isPrimitiveMark(mark) {\n  var markType = isMarkDef(mark) ? mark.type : mark;\n  return markType in PRIMITIVE_MARK_INDEX;\n}\nexport var STROKE_CONFIG = ['stroke', 'strokeWidth', 'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'strokeJoin', 'strokeMiterLimit'];\nexport var FILL_CONFIG = ['fill', 'fillOpacity'];\nexport var FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);\nexport var VL_ONLY_MARK_CONFIG_PROPERTIES = ['filled', 'color', 'tooltip', 'invalid', 'timeUnitBandPosition', 'timeUnitBand'];\nexport var VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  area: ['line', 'point'],\n  bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  rect: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  line: ['point'],\n  tick: ['bandSize', 'thickness']\n};\nexport var defaultMarkConfig = {\n  color: '#4c78a8',\n  invalid: 'filter',\n  timeUnitBand: 1\n};\nvar DEFAULT_RECT_BAND_SIZE = 5;\nexport var defaultBarConfig = {\n  binSpacing: 1,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  timeUnitBandPosition: 0.5\n};\nexport var defaultRectConfig = {\n  binSpacing: 0,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  timeUnitBandPosition: 0.5\n};\nexport var defaultTickConfig = {\n  thickness: 1\n};\nexport function getMarkType(m) {\n  return isMarkDef(m) ? m.type : m;\n}","map":null,"metadata":{},"sourceType":"module"}