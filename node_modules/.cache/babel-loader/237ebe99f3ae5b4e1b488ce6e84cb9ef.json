{"ast":null,"code":"import _defineProperty from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _defaultSpecifiers;\n\nimport { YEAR, QUARTER, MONTH, WEEK, DATE, DAY, HOURS, MINUTES, SECONDS, MILLISECONDS, timeUnits } from './units';\nimport { timeInterval, utcInterval } from './interval';\nimport { timeFormat as d3_timeFormat, utcFormat as d3_utcFormat } from 'd3-time-format';\nimport { error, extend, isObject, isString } from 'vega-util';\nvar defaultSpecifiers = (_defaultSpecifiers = {}, _defineProperty(_defaultSpecifiers, YEAR, '%Y '), _defineProperty(_defaultSpecifiers, QUARTER, 'Q%q '), _defineProperty(_defaultSpecifiers, MONTH, '%b '), _defineProperty(_defaultSpecifiers, DATE, '%d '), _defineProperty(_defaultSpecifiers, WEEK, 'W%U '), _defineProperty(_defaultSpecifiers, DAY, '%a '), _defineProperty(_defaultSpecifiers, HOURS, '%H:00'), _defineProperty(_defaultSpecifiers, MINUTES, '00:%M'), _defineProperty(_defaultSpecifiers, SECONDS, ':%S'), _defineProperty(_defaultSpecifiers, MILLISECONDS, '.%L'), _defineProperty(_defaultSpecifiers, \"\".concat(YEAR, \"-\").concat(MONTH), '%Y-%m '), _defineProperty(_defaultSpecifiers, \"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DATE), '%Y-%m-%d '), _defineProperty(_defaultSpecifiers, \"\".concat(HOURS, \"-\").concat(MINUTES), '%H:%M'), _defaultSpecifiers);\nexport function timeUnitSpecifier(units, specifiers) {\n  var s = extend({}, defaultSpecifiers, specifiers),\n      u = timeUnits(units),\n      n = u.length;\n  var fmt = '',\n      start = 0,\n      end,\n      key;\n\n  for (start = 0; start < n;) {\n    for (end = u.length; end > start; --end) {\n      key = u.slice(start, end).join('-');\n\n      if (s[key] != null) {\n        fmt += s[key];\n        start = end;\n        break;\n      }\n    }\n  }\n\n  return fmt.trim();\n}\nexport function timeFormat(specifier) {\n  return formatter(d3_timeFormat, timeInterval, specifier);\n}\nexport function utcFormat(specifier) {\n  return formatter(d3_utcFormat, utcInterval, specifier);\n}\n\nfunction formatter(format, interval, specifier) {\n  return isString(specifier) ? format(specifier) : multiFormat(format, interval, specifier);\n}\n\nfunction multiFormat(format, interval, spec) {\n  spec = spec || {};\n\n  if (!isObject(spec)) {\n    error(\"Invalid time multi-format specifier: \".concat(spec));\n  }\n\n  var second = interval(SECONDS),\n      minute = interval(MINUTES),\n      hour = interval(HOURS),\n      day = interval(DATE),\n      week = interval(WEEK),\n      month = interval(MONTH),\n      quarter = interval(QUARTER),\n      year = interval(YEAR),\n      L = format(spec[MILLISECONDS] || '.%L'),\n      S = format(spec[SECONDS] || ':%S'),\n      M = format(spec[MINUTES] || '%I:%M'),\n      H = format(spec[HOURS] || '%I %p'),\n      d = format(spec[DATE] || spec[DAY] || '%a %d'),\n      w = format(spec[WEEK] || '%b %d'),\n      m = format(spec[MONTH] || '%B'),\n      q = format(spec[QUARTER] || '%B'),\n      y = format(spec[YEAR] || '%Y');\n  return function (date) {\n    return (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}