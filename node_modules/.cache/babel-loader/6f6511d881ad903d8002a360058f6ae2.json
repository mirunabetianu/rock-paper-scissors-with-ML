{"ast":null,"code":"import { zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { RectMark } from '../marks/marktypes';\nimport { LegendGradientRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nimport { extend } from 'vega-util';\nexport default function (spec, scale, config, userEncode) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode,\n      enter,\n      start,\n      stop,\n      width,\n      height;\n\n  if (vertical) {\n    start = [0, 1];\n    stop = [0, 0];\n    width = thickness;\n    height = length;\n  } else {\n    start = [0, 0];\n    stop = [1, 0];\n    width = length;\n    height = thickness;\n  }\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      x: zero,\n      y: zero,\n      width: encoder(width),\n      height: encoder(height)\n    },\n    update: extend({}, enter, {\n      opacity: one,\n      fill: {\n        gradient: scale,\n        start: start,\n        stop: stop\n      }\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark(RectMark, LegendGradientRole, null, undefined, undefined, encode, userEncode);\n}","map":null,"metadata":{},"sourceType":"module"}