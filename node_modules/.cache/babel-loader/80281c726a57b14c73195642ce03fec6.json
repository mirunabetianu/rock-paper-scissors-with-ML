{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SourceNode } from './source';\nimport { GraticuleNode } from './graticule';\nimport { SequenceNode } from './sequence';\n/**\n * Whether this dataflow node is the source of the dataflow that produces data i.e. a source or a generator.\n */\n\nexport function isDataSourceNode(node) {\n  return node instanceof SourceNode || node instanceof GraticuleNode || node instanceof SequenceNode;\n}\n/**\n * Abstract base class for BottomUpOptimizer and TopDownOptimizer.\n * Contains only mutation handling logic. Subclasses need to implement iteration logic.\n */\n\nvar OptimizerBase =\n/*#__PURE__*/\nfunction () {\n  function OptimizerBase() {\n    _classCallCheck(this, OptimizerBase);\n\n    this._mutated = false;\n  } // Once true, _mutated is never set to false\n\n\n  _createClass(OptimizerBase, [{\n    key: \"setMutated\",\n    value: function setMutated() {\n      this._mutated = true;\n    }\n  }, {\n    key: \"mutatedFlag\",\n    get: function get() {\n      return this._mutated;\n    }\n  }]);\n\n  return OptimizerBase;\n}();\n/**\n * Starts from a node and runs the optimization function(the \"run\" method) upwards to the root,\n * depending on the continueFlag and mutatedFlag values returned by the optimization function.\n */\n\n\nexport var BottomUpOptimizer =\n/*#__PURE__*/\nfunction (_OptimizerBase) {\n  _inherits(BottomUpOptimizer, _OptimizerBase);\n\n  function BottomUpOptimizer() {\n    var _this;\n\n    _classCallCheck(this, BottomUpOptimizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BottomUpOptimizer).call(this));\n    _this._continue = false;\n    return _this;\n  }\n\n  _createClass(BottomUpOptimizer, [{\n    key: \"setContinue\",\n    value: function setContinue() {\n      this._continue = true;\n    }\n  }, {\n    key: \"reset\",\n\n    /**\n     * Reset the state of the optimizer after it has completed a run from the bottom of the tree to the top.\n     */\n    value: function reset() {// do nothing\n    }\n  }, {\n    key: \"optimizeNextFromLeaves\",\n    value: function optimizeNextFromLeaves(node) {\n      if (isDataSourceNode(node)) {\n        return false;\n      }\n\n      var next = node.parent;\n\n      var _this$run = this.run(node),\n          continueFlag = _this$run.continueFlag;\n\n      if (continueFlag) {\n        this.optimizeNextFromLeaves(next);\n      }\n\n      return this.mutatedFlag;\n    }\n  }, {\n    key: \"continueFlag\",\n    get: function get() {\n      return this._continue;\n    }\n  }, {\n    key: \"flags\",\n    get: function get() {\n      return {\n        continueFlag: this.continueFlag,\n        mutatedFlag: this.mutatedFlag\n      };\n    },\n    set: function set(_ref) {\n      var continueFlag = _ref.continueFlag,\n          mutatedFlag = _ref.mutatedFlag;\n\n      if (continueFlag) {\n        this.setContinue();\n      }\n\n      if (mutatedFlag) {\n        this.setMutated();\n      }\n    }\n  }]);\n\n  return BottomUpOptimizer;\n}(OptimizerBase);\n/**\n * The optimizer function( the \"run\" method), is invoked on the given node and then continues recursively.\n */\n\nexport var TopDownOptimizer =\n/*#__PURE__*/\nfunction (_OptimizerBase2) {\n  _inherits(TopDownOptimizer, _OptimizerBase2);\n\n  function TopDownOptimizer() {\n    _classCallCheck(this, TopDownOptimizer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TopDownOptimizer).apply(this, arguments));\n  }\n\n  return TopDownOptimizer;\n}(OptimizerBase);","map":null,"metadata":{},"sourceType":"module"}