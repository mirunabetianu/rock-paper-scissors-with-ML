{"ast":null,"code":"import parseExpression from './expression';\nimport parseUpdate from './update';\nimport { error } from 'vega-util';\nexport default function (signal, scope) {\n  var op = scope.getSignal(signal.name),\n      expr = signal.update;\n\n  if (signal.init) {\n    if (expr) {\n      error('Signals can not include both init and update expressions.');\n    } else {\n      expr = signal.init;\n      op.initonly = true;\n    }\n  }\n\n  if (expr) {\n    expr = parseExpression(expr, scope);\n    op.update = expr.$expr;\n    op.params = expr.$params;\n  }\n\n  if (signal.on) {\n    signal.on.forEach(function (_) {\n      parseUpdate(_, scope, op.id);\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}