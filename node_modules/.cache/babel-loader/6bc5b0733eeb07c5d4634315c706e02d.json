{"ast":null,"code":"import _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { isArray } from 'vega-util';\nimport * as log from '../log';\nimport { BaseConcatModel } from './baseconcat';\nimport { buildModel } from './buildmodel';\nimport { parseRepeatLayoutSize } from './layoutsize/parse';\nexport var RepeatModel =\n/*#__PURE__*/\nfunction (_BaseConcatModel) {\n  _inherits(RepeatModel, _BaseConcatModel);\n\n  function RepeatModel(spec, parent, parentGivenName, repeatValues, config) {\n    var _this;\n\n    _classCallCheck(this, RepeatModel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RepeatModel).call(this, spec, 'repeat', parent, parentGivenName, config, repeatValues, spec.resolve));\n\n    if (spec.resolve && spec.resolve.axis && (spec.resolve.axis.x === 'shared' || spec.resolve.axis.y === 'shared')) {\n      log.warn(log.message.REPEAT_CANNOT_SHARE_AXIS);\n    }\n\n    _this.repeat = spec.repeat;\n    _this.children = _this._initChildren(spec, _this.repeat, repeatValues, config);\n    return _this;\n  }\n\n  _createClass(RepeatModel, [{\n    key: \"_initChildren\",\n    value: function _initChildren(spec, repeat, repeater, config) {\n      var children = [];\n      var row = !isArray(repeat) && repeat.row || [repeater ? repeater.row : null];\n      var column = !isArray(repeat) && repeat.column || [repeater ? repeater.column : null];\n      var repeatValues = isArray(repeat) && repeat || [repeater ? repeater.repeat : null]; // cross product\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = repeatValues[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var repeatValue = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = row[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var rowValue = _step2.value;\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = column[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var columnValue = _step3.value;\n                  var name = (repeatValue ? \"__repeat_repeat_\".concat(repeatValue) : '') + (rowValue ? \"__repeat_row_\".concat(rowValue) : '') + (columnValue ? \"__repeat_column_\".concat(columnValue) : '');\n                  var childRepeat = {\n                    repeat: repeatValue,\n                    row: rowValue,\n                    column: columnValue\n                  };\n                  children.push(buildModel(spec.spec, this, this.getName('child' + name), undefined, childRepeat, config));\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return children;\n    }\n  }, {\n    key: \"parseLayoutSize\",\n    value: function parseLayoutSize() {\n      parseRepeatLayoutSize(this);\n    }\n  }, {\n    key: \"assembleDefaultLayout\",\n    value: function assembleDefaultLayout() {\n      var repeat = this.repeat;\n      var columns = isArray(repeat) ? undefined : repeat.column ? repeat.column.length : 1;\n      return Object.assign(Object.assign({}, columns ? {\n        columns: columns\n      } : {}), {\n        bounds: 'full',\n        align: 'all'\n      });\n    }\n  }]);\n\n  return RepeatModel;\n}(BaseConcatModel);","map":null,"metadata":{},"sourceType":"module"}