{"ast":null,"code":"import { Value, Perc, Perc2, zero, one } from './constants';\nimport guideMark from './guide-mark';\nimport { lookup } from './guide-util';\nimport { RectMark } from '../marks/marktypes';\nimport { LegendBandRole } from '../marks/roles';\nimport { addEncoders, encoder } from '../encode/encode-util';\nimport { extend } from 'vega-util';\nexport default function (spec, scale, config, userEncode, dataRef) {\n  var _ = lookup(spec, config),\n      vertical = _.isVertical(),\n      thickness = _.gradientThickness(),\n      length = _.gradientLength(),\n      encode,\n      enter,\n      u,\n      v,\n      uu,\n      vv,\n      adjust = '';\n\n  vertical ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-') : (u = 'x', uu = 'x2', v = 'y', vv = 'height');\n  enter = {\n    opacity: zero,\n    fill: {\n      scale: scale,\n      field: Value\n    }\n  };\n  enter[u] = {\n    signal: adjust + 'datum.' + Perc,\n    mult: length\n  };\n  enter[v] = zero;\n  enter[uu] = {\n    signal: adjust + 'datum.' + Perc2,\n    mult: length\n  };\n  enter[vv] = encoder(thickness);\n  encode = {\n    enter: enter,\n    update: extend({}, enter, {\n      opacity: one\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark(RectMark, LegendBandRole, null, Value, dataRef, encode, userEncode);\n}","map":null,"metadata":{},"sourceType":"module"}