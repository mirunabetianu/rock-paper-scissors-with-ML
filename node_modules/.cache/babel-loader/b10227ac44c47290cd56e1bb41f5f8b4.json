{"ast":null,"code":"import { Intersect } from './constants';\nimport { Literal } from 'vega-expression';\nimport { error, hasOwnProperty, peek } from 'vega-util';\nvar DataPrefix = ':',\n    IndexPrefix = '@';\nexport function selectionVisitor(name, args, scope, params) {\n  if (args[0].type !== Literal) error('First argument to selection functions must be a string literal.');\n  var data = args[0].value,\n      op = args.length >= 2 && peek(args).value,\n      field = 'unit',\n      indexName = IndexPrefix + field,\n      dataName = DataPrefix + data; // eslint-disable-next-line no-prototype-builtins\n\n  if (op === Intersect && !hasOwnProperty(params, indexName)) {\n    params[indexName] = scope.getData(data).indataRef(scope, field);\n  } // eslint-disable-next-line no-prototype-builtins\n\n\n  if (!hasOwnProperty(params, dataName)) {\n    params[dataName] = scope.getData(data).tuplesRef();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}