{"ast":null,"code":"import _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Split } from '../split';\n/**\n * Class to track interesting properties (see https://15721.courses.cs.cmu.edu/spring2016/papers/graefe-ieee1995.pdf)\n * about how fields have been parsed or whether they have been derived in a transform. We use this to not parse the\n * same field again (or differently).\n */\n\nexport var AncestorParse =\n/*#__PURE__*/\nfunction (_Split) {\n  _inherits(AncestorParse, _Split);\n\n  function AncestorParse() {\n    var _this;\n\n    var explicit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var implicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var parseNothing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, AncestorParse);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AncestorParse).call(this, explicit, implicit));\n    _this.explicit = explicit;\n    _this.implicit = implicit;\n    _this.parseNothing = parseNothing;\n    return _this;\n  }\n\n  _createClass(AncestorParse, [{\n    key: \"clone\",\n    value: function clone() {\n      var clone = _get(_getPrototypeOf(AncestorParse.prototype), \"clone\", this).call(this);\n\n      clone.parseNothing = this.parseNothing;\n      return clone;\n    }\n  }]);\n\n  return AncestorParse;\n}(Split);","map":null,"metadata":{},"sourceType":"module"}