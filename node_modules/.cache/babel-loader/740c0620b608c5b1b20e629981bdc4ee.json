{"ast":null,"code":"import curves from './curves';\nimport symbols from './symbols';\nimport { default as vg_rect } from './rectangle';\nimport { default as vg_trail } from './trail';\nimport { arc as d3_arc, symbol as d3_symbol, area as d3_area, line as d3_line } from 'd3-shape';\n\nfunction value(a, b) {\n  return a != null ? a : b;\n}\n\nvar x = function x(item) {\n  return item.x || 0;\n},\n    y = function y(item) {\n  return item.y || 0;\n},\n    w = function w(item) {\n  return item.width || 0;\n},\n    h = function h(item) {\n  return item.height || 0;\n},\n    xw = function xw(item) {\n  return (item.x || 0) + (item.width || 0);\n},\n    yh = function yh(item) {\n  return (item.y || 0) + (item.height || 0);\n},\n    sa = function sa(item) {\n  return item.startAngle || 0;\n},\n    ea = function ea(item) {\n  return item.endAngle || 0;\n},\n    pa = function pa(item) {\n  return item.padAngle || 0;\n},\n    ir = function ir(item) {\n  return item.innerRadius || 0;\n},\n    or = function or(item) {\n  return item.outerRadius || 0;\n},\n    cr = function cr(item) {\n  return item.cornerRadius || 0;\n},\n    tl = function tl(item) {\n  return value(item.cornerRadiusTopLeft, item.cornerRadius) || 0;\n},\n    tr = function tr(item) {\n  return value(item.cornerRadiusTopRight, item.cornerRadius) || 0;\n},\n    br = function br(item) {\n  return value(item.cornerRadiusBottomRight, item.cornerRadius) || 0;\n},\n    bl = function bl(item) {\n  return value(item.cornerRadiusBottomLeft, item.cornerRadius) || 0;\n},\n    sz = function sz(item) {\n  return value(item.size, 64);\n},\n    ts = function ts(item) {\n  return item.size || 1;\n},\n    def = function def(item) {\n  return !(item.defined === false);\n},\n    type = function type(item) {\n  return symbols(item.shape || 'circle');\n};\n\nvar arcShape = d3_arc().startAngle(sa).endAngle(ea).padAngle(pa).innerRadius(ir).outerRadius(or).cornerRadius(cr),\n    areavShape = d3_area().x(x).y1(y).y0(yh).defined(def),\n    areahShape = d3_area().y(y).x1(x).x0(xw).defined(def),\n    lineShape = d3_line().x(x).y(y).defined(def),\n    rectShape = vg_rect().x(x).y(y).width(w).height(h).cornerRadius(tl, tr, br, bl),\n    symbolShape = d3_symbol().type(type).size(sz),\n    trailShape = vg_trail().x(x).y(y).defined(def).size(ts);\nexport function hasCornerRadius(item) {\n  return item.cornerRadius || item.cornerRadiusTopLeft || item.cornerRadiusTopRight || item.cornerRadiusBottomRight || item.cornerRadiusBottomLeft;\n}\nexport function arc(context, item) {\n  return arcShape.context(context)(item);\n}\nexport function area(context, items) {\n  var item = items[0],\n      interp = item.interpolate || 'linear';\n  return (item.orient === 'horizontal' ? areahShape : areavShape).curve(curves(interp, item.orient, item.tension)).context(context)(items);\n}\nexport function line(context, items) {\n  var item = items[0],\n      interp = item.interpolate || 'linear';\n  return lineShape.curve(curves(interp, item.orient, item.tension)).context(context)(items);\n}\nexport function rectangle(context, item, x, y) {\n  return rectShape.context(context)(item, x, y);\n}\nexport function shape(context, item) {\n  return (item.mark.shape || item.shape).context(context)(item);\n}\nexport function symbol(context, item) {\n  return symbolShape.context(context)(item);\n}\nexport function trail(context, items) {\n  return trailShape.context(context)(items);\n}","map":null,"metadata":{},"sourceType":"module"}