{"ast":null,"code":"import { Left, Right, GroupSubtitleStyle, GroupTitleStyle, Skip } from './guides/constants';\nimport guideGroup from './guides/guide-group';\nimport guideMark from './guides/guide-mark';\nimport { alignExpr, lookup } from './guides/guide-util';\nimport parseMark from './mark';\nimport { TextMark } from './marks/marktypes';\nimport { TitleRole, TitleTextRole, TitleSubtitleRole } from './marks/roles';\nimport { addEncoders, extendEncode } from './encode/encode-util';\nimport { ref } from '../util';\nimport { Collect } from '../transforms';\nimport { extend, isString } from 'vega-util';\nvar angleExpr = \"item.orient===\\\"\".concat(Left, \"\\\"?-90:item.orient===\\\"\").concat(Right, \"\\\"?90:0\");\nexport default function (spec, scope) {\n  spec = isString(spec) ? {\n    text: spec\n  } : spec;\n\n  var _ = lookup(spec, scope.config.title),\n      encode = spec.encode || {},\n      userEncode = encode.group || {},\n      name = userEncode.name || undefined,\n      interactive = userEncode.interactive,\n      style = userEncode.style,\n      children = [],\n      dataRef,\n      group; // single-element data source for group title\n\n\n  dataRef = ref(scope.add(Collect(null, [{}]))); // include title text\n\n  children.push(buildTitle(spec, _, titleEncode(spec), dataRef)); // include subtitle text\n\n  if (spec.subtitle) {\n    children.push(buildSubTitle(spec, _, encode.subtitle, dataRef));\n  } // build title specification\n\n\n  group = guideGroup(TitleRole, style, name, dataRef, interactive, groupEncode(_, userEncode), children);\n  if (spec.zindex) group.zindex = spec.zindex; // parse title specification\n\n  return parseMark(group, scope);\n} // provide backwards-compatibility for title custom encode;\n// the top-level encode block has been *deprecated*.\n\nfunction titleEncode(spec) {\n  var encode = spec.encode;\n  return encode && encode.title || extend({\n    name: spec.name,\n    interactive: spec.interactive,\n    style: spec.style\n  }, encode);\n}\n\nfunction groupEncode(_, userEncode) {\n  var encode = {\n    enter: {},\n    update: {}\n  };\n  addEncoders(encode, {\n    orient: _('orient'),\n    anchor: _('anchor'),\n    align: {\n      signal: alignExpr\n    },\n    angle: {\n      signal: angleExpr\n    },\n    limit: _('limit'),\n    frame: _('frame'),\n    offset: _('offset') || 0,\n    padding: _('subtitlePadding')\n  });\n  return extendEncode(encode, userEncode, Skip);\n}\n\nfunction buildTitle(spec, _, userEncode, dataRef) {\n  var zero = {\n    value: 0\n  },\n      text = spec.text,\n      encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: {\n        value: 1\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    text: text,\n    align: {\n      signal: 'item.mark.group.align'\n    },\n    angle: {\n      signal: 'item.mark.group.angle'\n    },\n    limit: {\n      signal: 'item.mark.group.limit'\n    },\n    baseline: 'top',\n    dx: _('dx'),\n    dy: _('dy'),\n    fill: _('color'),\n    font: _('font'),\n    fontSize: _('fontSize'),\n    fontStyle: _('fontStyle'),\n    fontWeight: _('fontWeight'),\n    lineHeight: _('lineHeight')\n  }, {\n    // update\n    align: _('align'),\n    angle: _('angle'),\n    baseline: _('baseline')\n  });\n  return guideMark(TextMark, TitleTextRole, GroupTitleStyle, null, dataRef, encode, userEncode);\n}\n\nfunction buildSubTitle(spec, _, userEncode, dataRef) {\n  var zero = {\n    value: 0\n  },\n      text = spec.subtitle,\n      encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: {\n        value: 1\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    text: text,\n    align: {\n      signal: 'item.mark.group.align'\n    },\n    angle: {\n      signal: 'item.mark.group.angle'\n    },\n    limit: {\n      signal: 'item.mark.group.limit'\n    },\n    baseline: 'top',\n    dx: _('dx'),\n    dy: _('dy'),\n    fill: _('subtitleColor'),\n    font: _('subtitleFont'),\n    fontSize: _('subtitleFontSize'),\n    fontStyle: _('subtitleFontStyle'),\n    fontWeight: _('subtitleFontWeight'),\n    lineHeight: _('subtitleLineHeight')\n  }, {\n    // update\n    align: _('align'),\n    angle: _('angle'),\n    baseline: _('baseline')\n  });\n  return guideMark(TextMark, TitleSubtitleRole, GroupSubtitleStyle, null, dataRef, encode, userEncode);\n}","map":null,"metadata":{},"sourceType":"module"}