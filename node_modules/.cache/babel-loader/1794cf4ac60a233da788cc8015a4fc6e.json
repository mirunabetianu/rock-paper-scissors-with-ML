{"ast":null,"code":"import _classCallCheck from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mirunabetianu/WebstormProjects/rps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { vgField } from '../../channeldef';\nimport { duplicate, hash as _hash } from '../../util';\nimport { unique } from './../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the join aggregate transform nodes.\n */\n\nexport var JoinAggregateTransformNode =\n/*#__PURE__*/\nfunction (_DataFlowNode) {\n  _inherits(JoinAggregateTransformNode, _DataFlowNode);\n\n  function JoinAggregateTransformNode(parent, transform) {\n    var _this;\n\n    _classCallCheck(this, JoinAggregateTransformNode);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JoinAggregateTransformNode).call(this, parent));\n    _this.transform = transform;\n    return _this;\n  }\n\n  _createClass(JoinAggregateTransformNode, [{\n    key: \"clone\",\n    value: function clone() {\n      return new JoinAggregateTransformNode(null, duplicate(this.transform));\n    }\n  }, {\n    key: \"addDimensions\",\n    value: function addDimensions(fields) {\n      this.transform.groupby = unique(this.transform.groupby.concat(fields), function (d) {\n        return d;\n      });\n    }\n  }, {\n    key: \"dependentFields\",\n    value: function dependentFields() {\n      var out = new Set();\n\n      if (this.transform.groupby) {\n        this.transform.groupby.forEach(function (f) {\n          return out.add(f);\n        });\n      }\n\n      this.transform.joinaggregate.map(function (w) {\n        return w.field;\n      }).filter(function (f) {\n        return f !== undefined;\n      }).forEach(function (f) {\n        return out.add(f);\n      });\n      return out;\n    }\n  }, {\n    key: \"producedFields\",\n    value: function producedFields() {\n      return new Set(this.transform.joinaggregate.map(this.getDefaultName));\n    }\n  }, {\n    key: \"getDefaultName\",\n    value: function getDefaultName(joinAggregateFieldDef) {\n      var _a;\n\n      return _a = joinAggregateFieldDef.as, _a !== null && _a !== void 0 ? _a : vgField(joinAggregateFieldDef);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash() {\n      return \"JoinAggregateTransform \".concat(_hash(this.transform));\n    }\n  }, {\n    key: \"assemble\",\n    value: function assemble() {\n      var fields = [];\n      var ops = [];\n      var as = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.transform.joinaggregate[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var joinaggregate = _step.value;\n          ops.push(joinaggregate.op);\n          as.push(this.getDefaultName(joinaggregate));\n          fields.push(joinaggregate.field === undefined ? null : joinaggregate.field);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var groupby = this.transform.groupby;\n      return Object.assign({\n        type: 'joinaggregate',\n        as: as,\n        ops: ops,\n        fields: fields\n      }, groupby !== undefined ? {\n        groupby: groupby\n      } : {});\n    }\n  }]);\n\n  return JoinAggregateTransformNode;\n}(DataFlowNode);","map":null,"metadata":{},"sourceType":"module"}